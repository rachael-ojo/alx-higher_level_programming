#!/usr/bin/python3
import csv

class Base:
    @classmethod
    def save_to_file_csv(cls, list_objs):
        """
        Serialize objects to CSV file.
        """
        filename = cls.__name__ + ".csv"
        with open(filename, mode='w', newline='') as file:
            writer = csv.writer(file)
            for obj in list_objs:
                if cls.__name__ == "Rectangle":
                    data = [obj.id, obj.width, obj.height, obj.x, obj.y]
                elif cls.__name__ == "Square":
                    data = [obj.id, obj.size, obj.x, obj.y]
                writer.writerow(data)

class Rectangle:
    def __init__(self, width, height):
        self.width = width
        self.height = height

    @classmethod
    def save_to_file_csv(cls, list_rectangles):
        filename = cls.__name__ + ".csv"
        with open(filename, mode='w', newline='') as file:
            writer = csv.writer(file)
            for rectangle in list_rectangles:
                writer.writerow([rectangle.width, rectangle.height])

    @classmethod
    def load_from_file_csv(cls):
        """
        Deserialize objects from CSV file.
        """
        filename = cls.__name__ + ".csv"
        try:
            with open(filename, mode='r', newline='') as file:
                reader = csv.reader(file)
                instances = []
                for row in reader:
                    if cls.__name__ == "Rectangle":
                        obj = cls(*map(int, row))
                    elif cls.__name__ == "Square":
                        obj = cls(*map(int, row))
                    instances.append(obj)
                return instances
        except FileNotFoundError:
            return []
